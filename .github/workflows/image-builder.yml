# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
name: Image Build with Docker

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: "us-east-1"
  DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/api-ponto-eletronico-registro:${{ github.sha }}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4.1.1
      - name: Set up JDK 17
        uses: actions/setup-java@v4.0.0
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package -DskipTests --file pom.xml
      - name: Save artifact
        uses: actions/upload-artifact@v4.3.1
        with:
          name: ponto-eletronico-artifact
          path: target/ponto-eletronico-registro-0.0.1.jar
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker images
        id: build-image
        uses: docker/build-push-action@v5.1.0
        with:
          build-args: |
            SPRING_PROFILE=${{ secrets.SPRING_PROFILE }}
          context: .
          file: ./docker/Dockerfile
          push: true
          tags: ${{ env.DOCKER_IMAGE }}
  deploy:
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: ECS Deploy Service
        uses: donaldpiret/ecs-deploy@master
        with:
          cluster: "Ponto-Eletronico"
          target: ponto-eletronico-registro
          image: registro ${{ env.DOCKER_IMAGE }}
